const request = require("supertest");
const { app } = require("../app");
const { User } = require("../src/models");

describe("POST /api/auth/login", () => {
  it("should return 200 OK with token and user info", async () => {
    // Create a test user
    const testUser = await User.create({
      email: "testuser@example.com",
      password: "testpassword",
      subscription: "starter",
    });

    // Make a POST request to the login endpoint
    const response = await request(app)
      .post("/api/auth/login")
      .send({
        email: testUser.email,
        password: "testpassword",
      })
      .expect(200);

    // Check that the response contains a token and user info
    expect(response.body).toHaveProperty("data.token");
    expect(response.body).toHaveProperty("data.user");
    expect(response.body.data.user.email).toBe(testUser.email);
    expect(response.body.data.user.subscription).toBe(testUser.subscription);

    // Check that the user document in the database has been updated with a new token
    const updatedUser = await User.findById(testUser._id);
    expect(updatedUser.token).not.toBe(null);
  });

  it("should return 401 Unauthorized with error message when email or password is incorrect", async () => {
    // Make a POST request to the login endpoint with incorrect email and password
    const response = await request(app)
      .post("/api/auth/login")
      .send({
        email: "incorrectemail@example.com",
        password: "incorrectpassword",
      })
      .expect(401);

    // Check that the response contains an error message
    expect(response.body).toHaveProperty("message");
    expect(response.body.message).toBe("Email or password is wrong");
  });
});
